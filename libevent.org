* DONE libevent 错误处理
CLOSED: [2023-02-16 Thu 16:30]
- State "DONE"       from "STARTED"    [2023-02-16 Thu 16:30]
:LOGBOOK:
CLOCK: [2023-02-16 Thu 16:12]--[2023-02-16 Thu 16:23] =>  0:11
CLOCK: [2023-02-16 Thu 15:10]--[2023-02-16 Thu 15:46] =>  0:36
CLOCK: [2023-02-16 Thu 15:03]--[2023-02-16 Thu 15:09] =>  0:06
:END:
预计 1 个小时
  - [X] C 语言的错误处理
    - [X] 如果函数处理失误, 则要把资源清空, 在层层上报给最终调用用户.
    - [X] 退出还是警告
      - [X] 如果有明确的程序逻辑错误, 则意味者用户使用失误, 那么调用 err 退出.
      - [X] 如果是外界因素且不破坏程序状态使程序处于一个不明确的状态, 则警告
          例如 event_base *内存分配这种可见的错误, 其本身可以有多个 event_base, 1. 一个无法分配不影响全局 2. 用户有权知道并决定怎么处理

* TODO 日志库学习

* TODO event_base 结构体
:LOGBOOK:
CLOCK: [2023-02-16 Thu 21:47]--[2023-02-16 Thu 22:03] =>  0:16
CLOCK: [2023-02-16 Thu 21:45]--[2023-02-16 Thu 21:46] =>  0:01
CLOCK: [2023-02-16 Thu 19:55]--[2023-02-16 Thu 21:44] =>  1:49
:END:
 - [X] POll后端
 - [X] 激活队列
   - [X] 激活 event_callback(signal_callback)
   - [X] 激活 timer_callback
 - [ ] 准备
   - [ ] io 哈希
   - [ ] 信号哈希
   - [ ] 最小堆
 - [ ] 时间状态
 - [ ] changelist
 - [ ] 线程
   - [ ] 线程 id
   - [ ] 锁
 - [ ] wakeup
   - [ ] 被别的线程唤醒
   - [ ] 唤醒别的线程
 - [ ] evwatcher
   

* TODO 事件宏 

* TODO 插入 io 事件
:LOGBOOK:
CLOCK: [2023-02-16 Thu 22:04]--[2023-02-16 Thu 23:00] =>  0:56
:END: