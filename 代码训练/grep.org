
* DONE 项目信息
CLOSED: [2023-02-03 Fri 19:48]
- State "DONE"       from "STARTED"    [2023-02-03 Fri 19:48]
:LOGBOOK:
CLOCK: [2023-02-03 Fri 19:47]--[2023-02-03 Fri 19:48] =>  0:01
CLOCK: [2023-02-03 Fri 19:34]--[2023-02-03 Fri 19:46] =>  0:12
:END:

* TODO 项目结构
:LOGBOOK:
CLOCK: [2023-02-03 Fri 19:51]--[2023-02-03 Fri 20:10] =>  0:19
:END:

* DONE 编译执行调试起来.
CLOSED: [2023-02-03 Fri 20:22]
- State "DONE"       from "STARTED"    [2023-02-03 Fri 20:22]
:LOGBOOK:
CLOCK: [2023-02-03 Fri 20:13]--[2023-02-03 Fri 20:22] =>  0:09
:END:

- [X] 修改 makefile, 添加调试模式
* TODO 执行不同的流程, 追踪多条线路 [ 难道有点大, 因为 grep 的功能很多, 但我相信大多数都是边角功能，例如忽略大小写等.]
** DONE 追踪主干线路
CLOSED: [2023-02-03 Fri 23:31]
- State "DONE"       from "STARTED"    [2023-02-03 Fri 23:31]
:LOGBOOK:
CLOCK: [2023-02-03 Fri 23:04]--[2023-02-03 Fri 23:31] =>  0:27
CLOCK: [2023-02-03 Fri 22:21]--[2023-02-03 Fri 22:41] =>  0:20
CLOCK: [2023-02-03 Fri 21:42]--[2023-02-03 Fri 22:01] =>  0:19
CLOCK: [2023-02-03 Fri 20:32]--[2023-02-03 Fri 20:42] =>  0:10
:END:

- [X] 在文件 grep.c 中索引字符串 static

  - [X] 读取用户命令行参数
    + 问: 怎么连续读取两个参数, 分批次处理, 还是一口气处理?
    + 答: 先根据索引内容和索引方式, 生成不同的处理方式, 然后最后在根据文件 grep 

  - [X] 关键函数

    关键是要看注释, 那句话, 封装隔离不等于接口隔离. 也就是说, 在 c 的世界里, 不看注释, 不看文档, 不调试, 你根部无法知道那个是接口

    - setmatcher 生成 compile 回调函数的索引规则
    - 根据最后一个参数, 在目标文件中调用 grep 索引 

    

** 